exp(7)
full_data_canada %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none"
) +
scale_x_date(date_labels = "%y %b") +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,900))
full_data_DK %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none") +
scale_x_date(date_labels = "%y %b")  +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
ggsave(paste0(figure_path, "DK_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
DK_SIZE <- 5.831 # millions
full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/DK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/DK_SIZE, ymin = exp(OS3smoothed_lower_overd)/DK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue"))  +
scale_x_date(date_labels = "%y %b") + guides(color= "none") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "DK_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue"))  +
scale_x_date(date_labels = "%y %b") + guides(color= "none") + coord_cartesian(ylim = c(-2,6))
ggsave(paste0(figure_path, "DK_covid_log_death.pdf"), device = "pdf", width = 5, height = 5)
OS3g_result_Over <- extract_mean_interval_refined_overd(OS3mod_Denmark, x = knots,
refined_x = full_data_DK$t,
p = p, type = "function", Xf = Xf)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_Denmark, x = knots,
refined_x = full_data_DK$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_Denmark, x = knots,
refined_x = full_data_DK$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_DK$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_DK$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_DK$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/DK_SIZE, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/DK_SIZE, ymin = derivOS3smoothed_lower_over/DK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
scale_x_date(date_labels = "%y %b") + guides(color= "none")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path,"DK_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over <- data.frame(Date = full_data_DK$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "DK_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_Denmark, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_DK)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_DK <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
full_data_SA <- full_data_covid %>% filter(location == "South Africa") %>% dplyr::select(date, new_deaths, new_deaths_smoothed)
full_data_SA$new_deaths[is.na(full_data_SA$new_deaths)] <- 0
full_data_SA$t <- as.Date(full_data_SA$date) %>% as.numeric()
full_data_SA$t <- full_data_SA$t - full_data_SA$t[1]
full_data_SA$t <- full_data_SA$t/31
full_data_SA$weekdays <- weekdays(as.Date(full_data_SA$date))
full_data_SA$weekdays <- factor(full_data_SA$weekdays,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered = F)
Xf <- model.matrix(~ weekdays, data = full_data_SA, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
p = 3
knots <- seq(0,max(full_data_SA$t), length.out = 100)
OS3mod_SA <- Imple_BayesRegression_COVID(y = round(full_data_SA$new_deaths), x = full_data_SA$t,
knots = knots, p = p, prior = prior_set_overdis, aghq_k = 10, Xf = Xf)
OS3g_result_Over <- extract_mean_interval_refined_overd(OS3mod_SA, x = knots,
refined_x = full_data_SA$t,
p = p, type = "function", Xf = Xf)
full_data_SA$OS3smoothed_overd <- OS3g_result_Over$mean
full_data_SA$OS3smoothed_upper_overd <- OS3g_result_Over$upper
full_data_SA$OS3smoothed_lower_overd <- OS3g_result_Over$lower
full_data_SA$Date <- as.Date(full_data_SA$date)
full_data_SA %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none") +
scale_x_date(date_labels = "%y %b")  +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
SA_SIZE <- 59.31
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SA_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SA_SIZE, ymin = exp(OS3smoothed_lower_overd)/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SA_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-2,6))
ggsave(paste0(figure_path, "SA_covid_log_death.pdf"), device = "pdf", width = 5, height = 5)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_SA, x = knots,
refined_x = full_data_SA$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_SA, x = knots,
refined_x = full_data_SA$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_SA$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_SA$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_SA$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/SA_SIZE, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/SA_SIZE, ymin = derivOS3smoothed_lower_over/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SA_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over <- data.frame(Date = full_data_SA$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SA_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_SA, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_SA)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_SA <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
###############################
###############################
###4.South Korea Analysis:####
###############################
###############################
full_data_SK <- full_data_covid %>% filter(location == "South Korea") %>% dplyr::select(date, new_deaths, new_deaths_smoothed)
full_data_SK$new_deaths[is.na(full_data_SK$new_deaths)] <- 0
full_data_SK$t <- as.Date(full_data_SK$date) %>% as.numeric()
full_data_SK$t <- full_data_SK$t - full_data_SK$t[1]
full_data_SK$t <- full_data_SK$t/31
full_data_SK$weekdays <- weekdays(as.Date(full_data_SK$date))
full_data_SK$weekdays <- factor(full_data_SK$weekdays,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered = F)
Xf <- model.matrix(~ weekdays, data = full_data_SK, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
knots <- seq(0,max(full_data_SK$t), length.out = 100)
OS3mod_SK <- Imple_BayesRegression_COVID(y = round(full_data_SK$new_deaths), x = full_data_SK$t,
knots = knots, p = p, prior = prior_set_overdis, aghq_k = 10, Xf = Xf)
OS3g_result_Over <- extract_mean_interval_refined_overd(OS3mod_SK, x = knots,
refined_x = full_data_SK$t,
p = p, type = "function", Xf = Xf)
full_data_SK$OS3smoothed_overd <- OS3g_result_Over$mean
full_data_SK$OS3smoothed_upper_overd <- OS3g_result_Over$upper
full_data_SK$OS3smoothed_lower_overd <- OS3g_result_Over$lower
full_data_SK$Date <- as.Date(full_data_SK$date)
full_data_SK %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
scale_x_date(date_labels = "%y %b") +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
full_data_SK %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
scale_x_date(date_labels = "%y %b") +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000)) +
theme(legend.position = c(.2,.75), legend.title = element_text(size=15), #change legend title font size
legend.text = element_text(size=12),
legend.key.size = unit(0.2, 'cm'), #change legend key size
legend.key.height = unit(0.2, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm') #change legend key width
)
full_data_SK %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
scale_x_date(date_labels = "%y %b") +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000)) +
theme(legend.position = c(.2,.75), legend.title = element_text(size=15), #change legend title font size
legend.text = element_text(size=12),
legend.key.size = unit(0.2, 'cm'), #change legend key size
legend.key.height = unit(0.2, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm') #change legend key width
)
ggsave(paste0(figure_path, "SK_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-2,6))
full_data_canada %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none"
) +
scale_x_date(date_labels = "%y %b") +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
ggsave(paste0(figure_path, "canada_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
### Also present the population adjusted figure:
CANADA_POP <- 38.01 ## millions
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/CANADA_POP, ymin = exp(OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "canada_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-2,6))
ggsave(paste0(figure_path, "canada_covid_log_death.pdf"), device = "pdf", width = 5, height = 5)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_Canada, x = knots,
refined_x = full_data_canada$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_Canada, x = knots,
refined_x = full_data_canada$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3f1st_result_over <- data.frame(Date = full_data_canada$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_canada$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_canada$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_canada$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/CANADA_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/CANADA_POP, ymin = derivOS3smoothed_lower_over/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "canada_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "canada_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_Canada, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_canada)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_CA <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
full_data_DK %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none") +
scale_x_date(date_labels = "%y %b")  +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
ggsave(paste0(figure_path, "DK_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
DK_SIZE <- 5.831 # millions
full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/DK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/DK_SIZE, ymin = exp(OS3smoothed_lower_overd)/DK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue"))  +
scale_x_date(date_labels = "%y %b") + guides(color= "none") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "DK_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue"))  +
scale_x_date(date_labels = "%y %b") + guides(color= "none") + coord_cartesian(ylim = c(-2,6))
ggsave(paste0(figure_path, "DK_covid_log_death.pdf"), device = "pdf", width = 5, height = 5)
OS3g_result_Over <- extract_mean_interval_refined_overd(OS3mod_Denmark, x = knots,
refined_x = full_data_DK$t,
p = p, type = "function", Xf = Xf)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_Denmark, x = knots,
refined_x = full_data_DK$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_Denmark, x = knots,
refined_x = full_data_DK$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_DK$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_DK$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_DK$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/DK_SIZE, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/DK_SIZE, ymin = derivOS3smoothed_lower_over/DK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
scale_x_date(date_labels = "%y %b") + guides(color= "none")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path,"DK_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over <- data.frame(Date = full_data_DK$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "DK_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_Denmark, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_DK)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_DK <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
full_data_SA %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none") +
scale_x_date(date_labels = "%y %b")  +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
SA_SIZE <- 59.31
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SA_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SA_SIZE, ymin = exp(OS3smoothed_lower_overd)/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SA_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-2,6))
ggsave(paste0(figure_path, "SA_covid_log_death.pdf"), device = "pdf", width = 5, height = 5)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_SA, x = knots,
refined_x = full_data_SA$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_SA, x = knots,
refined_x = full_data_SA$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_SA$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_SA$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_SA$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/SA_SIZE, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/SA_SIZE, ymin = derivOS3smoothed_lower_over/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SA_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over <- data.frame(Date = full_data_SA$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SA_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_SA, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_SA)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_SA <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
full_data_SK %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
scale_x_date(date_labels = "%y %b") +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000)) +
theme(legend.position = c(.2,.75), legend.title = element_text(size=15), #change legend title font size
legend.text = element_text(size=12),
legend.key.size = unit(0.2, 'cm'), #change legend key size
legend.key.height = unit(0.2, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm') #change legend key width
)
ggsave(paste0(figure_path, "SK_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
SK_SIZE <- 51.78 ## millions
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SK_SIZE, ymin = exp(OS3smoothed_lower_overd)/SK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SK_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd), ymin = (OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("g(t)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-2,6))
ggsave(paste0(figure_path, "SK_covid_log_death.pdf"), device = "pdf", width = 5, height = 5)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_SK, x = knots,
refined_x = full_data_SK$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_SK, x = knots,
refined_x = full_data_SK$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3f1st_result_over <- data.frame(Date = full_data_SK$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_SK$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_SK$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_SK$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/SK_SIZE, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/SK_SIZE, ymin = derivOS3smoothed_lower_over/SK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SK_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SK_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_SK, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_SK)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_SK <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
full_data_SA %>% mutate(new_deaths = ifelse(new_deaths == 0, new_deaths + 0.5, new_deaths)) %>%
ggplot(aes(x = Date, y = (new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none") +
scale_x_date(date_labels = "%y %b")  +
scale_y_continuous(trans = "log", breaks = c(5,20,50,150,400,1000), limits = c(1,1000))
ggsave(paste0(figure_path, "SA_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
