full_data_DK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/DK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/DK_SIZE, ymin = (OS3smoothed_lower_overd)/DK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue"))  +
scale_x_date(date_labels = "%y %b") + guides(color= "none")
ggsave(paste0(figure_path, "DK_covid_log_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/SA_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/SA_SIZE, ymin = (OS3smoothed_lower_overd)/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")
ggsave(paste0(figure_path, "SA_covid_log_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/SK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/SK_SIZE, ymin = (OS3smoothed_lower_overd)/SK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")
ggsave(paste0(figure_path, "SK_covid_log_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
### Overall Week Day Effects:
week_data_all <- rbind(week_data_CA, week_data_DK, week_data_SA, week_data_SK)
week_data_DK
week_data_SA
week_data_SK
week_data_CA
###############################
###############################
###1.Canada Analysis:##########
###############################
###############################
full_data_canada <- full_data_covid %>% filter(location == "Canada") %>% dplyr::select(date, new_deaths, new_deaths_smoothed)
full_data_canada$new_deaths[is.na(full_data_canada$new_deaths)] <- 0
full_data_canada$t <- as.Date(full_data_canada$date) %>% as.numeric()
full_data_canada$t <- full_data_canada$t - full_data_canada$t[1]
full_data_canada$t <- full_data_canada$t/31
full_data_canada$weekdays <- weekdays(as.Date(full_data_canada$date))
full_data_canada$weekdays <- factor(full_data_canada$weekdays,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered = F)
Xf <- model.matrix(~ weekdays, data = full_data_canada, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
p = 3
prior_set_conversion <- prior_order_conversion_predictive(d = (7/31), prior = list(u = log(2), alpha = 0.5), p = 3)
prior_set_overdis <- list(u1 = prior_set_conversion$u,
alpha1 = prior_set_conversion$alpha,
u2 = 0.1,
alpha2 = 0.5,
betaprec = 0.01,
Xfprec = 0.01)
knots <- seq(0,max(full_data_canada$t), length.out = 100)
OS3mod_Canada <- Imple_BayesRegression_COVID(y = round(full_data_canada$new_deaths), x = full_data_canada$t,
knots = knots, p = p, prior = prior_set_overdis, aghq_k = 10, Xf = Xf)
OS3g_result_Over <- extract_mean_interval_refined_overd(OS3mod_Canada, x = knots,
refined_x = full_data_canada$t,
p = p, type = "function", Xf = Xf)
full_data_canada$OS3smoothed_overd <- OS3g_result_Over$mean
full_data_canada$OS3smoothed_upper_overd <- OS3g_result_Over$upper
full_data_canada$OS3smoothed_lower_overd <- OS3g_result_Over$lower
full_data_canada$Date <- as.Date(full_data_canada$date)
full_data_canada %>% ggplot(aes(x = Date, y = new_deaths)) + geom_point(color = "black", alpha = 0.4) +
geom_line(aes(y = exp(OS3smoothed_overd), color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd), ymin = exp(OS3smoothed_lower_overd)), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + ylim(c(0,300))
ggsave(paste0(figure_path, "canada_covid_death.pdf"), device = "pdf", width = 5, height = 5)
full_data_canada %>% ggplot(aes(x = Date, y = new_deaths)) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("New Deaths") + xlab("") +
theme(legend.position = "none"
) +
scale_x_date(date_labels = "%y %b") + ylim(c(0,300))
ggsave(paste0(figure_path, "canada_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
### Also present the population adjusted figure:
CANADA_POP <- 38.01 ## millions
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/CANADA_POP, ymin = exp(OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "canada_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/CANADA_POP, ymin = (OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")
ggsave(paste0(figure_path, "canada_covid_log_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f_samps_over <- extract_samples_Ospline_refined_overd(OS3mod_Canada, x = knots,
refined_x = full_data_canada$t,
p = 3, type = "function")
OS3f1st_samps_over <- extract_deriv_samples_OSpline_overd(OS3mod_Canada, x = knots,
refined_x = full_data_canada$t,
p = 3, degree = 1)
OS3g1st_samps_over <- cbind(OS3f_samps_over[,1]*31, (exp(OS3f_samps_over[,-1]) * OS3f1st_samps_over[,-1])/31)
OS3f1st_result_over <- data.frame(Date = full_data_canada$Date, mean = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3f1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
OS3g1st_result_over <- data.frame(x = OS3g1st_samps_over[,1], mean = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, mean),
upper = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.975),
lower = OS3g1st_samps_over[,-1] %>% apply(MARGIN = 1, quantile, p = 0.025))
full_data_canada$derivOS3smoothed_over <- OS3g1st_result_over$mean
full_data_canada$derivOS3smoothed_upper_over <- OS3g1st_result_over$upper
full_data_canada$derivOS3smoothed_lower_over <- OS3g1st_result_over$lower
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over, ymin = derivOS3smoothed_lower_over), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Derivative") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(-8,12))
ggsave(paste0(figure_path, "canada_covid_death_deriv.pdf"), device = "pdf", width = 5, height = 5)
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = derivOS3smoothed_over/CANADA_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = derivOS3smoothed_upper_over/CANADA_POP, ymin = derivOS3smoothed_lower_over/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "canada_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
OS3f1st_result_over %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = upper, ymin = lower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Derivative (log risk)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")
ggsave(paste0(figure_path, "canada_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
poster <- sample_marginal(OS3mod_Canada, M = 3000)
pos_samps <- poster$samps
pos_samps_fixed <- pos_samps[(length(knots) + p): (nrow(pos_samps) - nrow(full_data_canada)), ]
pos_samps_fixed_Sunday <- apply(-pos_samps_fixed, 2, sum)
pos_samps_fixed <- rbind(pos_samps_fixed, pos_samps_fixed_Sunday)
rownames(pos_samps_fixed) <- c(colnames(Xf), "weekdays7")
week_mean <- pos_samps_fixed %>% apply(MARGIN = 1, mean)
week_sd <- pos_samps_fixed %>% apply(MARGIN = 1, sd)
week_upper <- week_mean + 1.96 * week_sd
week_lower <- week_mean - 1.96 * week_sd
week_data_CA <- data.frame(mean = week_mean, sd = week_sd, upper = week_upper, lower = week_lower,
days = substr(rownames(pos_samps_fixed), start = 9, stop = nchar(rownames(pos_samps_fixed))))
week_data_CA %>% ggplot(aes(x = as.numeric(days), y = mean)) + geom_point() +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) +
guides(color= "none") + ylim(c(-1,1))
ggsave(paste0(figure_path, "canada_covid_death_weekdays.pdf"), device = "pdf", width = 5, height = 5)
### Overall Week Day Effects:
week_data_all <- rbind(week_data_CA, week_data_DK, week_data_SA, week_data_SK)
week_data_all$country <- rep(c("Canada", "Denmark", "South-Africa", "South-Korea"), each = 7)
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country)) + geom_point() +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point() +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point()
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point() +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = "dodge") +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = "dodge") +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1, position = "dodge") + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = "dodge") +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = "dodge") +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none") + position_dodge(width = NULL, preserve = c("total"))
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single")) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single", width = 0.1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single", width = 0.3)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1) + ylim(c(-0.8,0.8), position = position_dodge2(preserve = "single", width = 1)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), width=.1, position = position_dodge2(preserve = "single", width = 1)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "single", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "single", width = 1)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "total", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "total", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.2)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "total", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.5)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) + geom_point(position = position_dodge2(preserve = "total", width = 1)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.5)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 1)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.5)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
?geom_errorbar
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 1)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.5)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.8)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.5)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.9)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1.5)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.9)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 2)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.9)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 3)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.9)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 3)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.9)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1)) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.9)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1), width = 0.5) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.5)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total", width = 1), width = 0.5) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.5)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total"), width = 0.5) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
?geom_errorbar
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.5)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total"), width = 0.5, size = 0.5) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.5)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total"), width = 0.5, size = 1) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
week_data_all %>% ggplot(aes(x = as.numeric(days), y = mean, color = country, group = country)) +
scale_x_continuous(breaks = c(1:7), labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")) +
theme_classic(base_size = 15) +
xlab("Week Days") +
ylab("Weekday effect in death rate") +
geom_point(position = position_dodge2(preserve = "total", width = 0.5)) +
geom_errorbar(aes(ymin=upper, ymax=lower), position = position_dodge2(preserve = "total"), width = 0.5) + ylim(c(-0.8,0.8)) +
theme(legend.position="none")
ggsave(paste0(figure_path, "all_covid_death_weekdays.pdf"), device = "pdf", width = 5, height = 5)
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/CANADA_POP, ymin = (OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b")
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/CANADA_POP, ymin = (OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log")
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/CANADA_POP, ymin = (OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log2")
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/CANADA_POP, ymin = exp(OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log2")
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/CANADA_POP, ymin = exp(OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10")
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/CANADA_POP, ymin = exp(OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(.01,10))
full_data_canada %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/CANADA_POP, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/CANADA_POP, ymin = exp(OS3smoothed_lower_overd)/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(.1,10))
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = (OS3smoothed_overd)/SA_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = (OS3smoothed_upper_overd)/SA_SIZE, ymin = (OS3smoothed_lower_overd)/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(.1,10))
full_data_SA %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SA_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SA_SIZE, ymin = exp(OS3smoothed_lower_overd)/SA_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(.1,10))
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SK_SIZE, ymin = exp(OS3smoothed_lower_overd)/SK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(.1,10))
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SK_SIZE, ymin = exp(OS3smoothed_lower_overd)/SK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(0.01,10))
full_data_SK %>% ggplot(aes(x = Date)) +
geom_line(aes(y = exp(OS3smoothed_overd)/SK_SIZE, color = "OS3")) +
geom_ribbon(aes(ymax = exp(OS3smoothed_upper_overd)/SK_SIZE, ymin = exp(OS3smoothed_lower_overd)/SK_SIZE), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) + ylab("Log new deaths (per million)") + xlab("") +
scale_color_manual(values = c("blue")) + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + scale_y_continuous(trans = "log10") + coord_cartesian(ylim = c(0.0001,10))
full_data_canada
full_data_SK
working_path <- "/Users/ziangzhang/Documents/GitHub/random-walks/Research_Progress/covid_data/v11/"
source_path <- "/Users/ziangzhang/Documents/GitHub/random-walks/Research_Progress/covid_data/v11/source/"
figure_path <- "/Users/ziangzhang/Documents/GitHub/random-walks/Research_Progress/covid_data/v11/figures/"
cpp_path <- "/Users/ziangzhang/Documents/GitHub/random-walks/Research_Progress/covid_data/v11/cpp/"
source(paste0(source_path,"08_loads.R"))
source(paste0(source_path,"18_functions_defined.R"))
source(paste0(source_path,"02_functions_model_selection.R"))
source(paste0(source_path,"bayes_regression_COVID.R"))
compile(paste0(cpp_path,"00_Poisson_Smoothing_PC_overdisp_covid.cpp"))
dyn.load(dynlib(paste0(cpp_path,"00_Poisson_Smoothing_PC_overdisp_covid")))
full_data_covid <- read.csv(file = paste0(working_path, "owid-covid-data.csv"), header = T)
full_data_covid <- full_data_covid %>% filter(date >= "2020-03-01")
###############################
###############################
###4.South Korea Analysis:####
###############################
###############################
full_data_SK <- full_data_covid %>% filter(location == "South Korea") %>% dplyr::select(date, new_deaths, new_deaths_smoothed)
full_data_SK$new_deaths[is.na(full_data_SK$new_deaths)] <- 0
full_data_SK$t <- as.Date(full_data_SK$date) %>% as.numeric()
full_data_SK$t <- full_data_SK$t - full_data_SK$t[1]
full_data_SK$t <- full_data_SK$t/31
full_data_SK$weekdays <- weekdays(as.Date(full_data_SK$date))
full_data_SK$weekdays <- factor(full_data_SK$weekdays,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered = F)
Xf <- model.matrix(~ weekdays, data = full_data_SK, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
knots <- seq(0,max(full_data_SK$t), length.out = 100)
OS3mod_SK <- Imple_BayesRegression_COVID(y = round(full_data_SK$new_deaths), x = full_data_SK$t,
knots = knots, p = p, prior = prior_set_overdis, aghq_k = 10, Xf = Xf)
full_data_SK$Date <- as.Date(full_data_SK$date)
full_data_SK %>% ggplot(aes(x = Date, y = log(new_deaths))) + geom_point(aes(color = weekdays), alpha = 0.4) +
theme_classic(base_size = 15) + ylab("Log New Deaths") + xlab("") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = (c(0.5,7))) +
theme(legend.position = c(.2,.75), legend.title = element_text(size=15), #change legend title font size
legend.text = element_text(size=12),
legend.key.size = unit(0.2, 'cm'), #change legend key size
legend.key.height = unit(0.2, 'cm'), #change legend key height
legend.key.width = unit(1, 'cm') #change legend key width
)
ggsave(paste0(figure_path, "SK_covid_death_raw.pdf"), device = "pdf", width = 5, height = 5)
