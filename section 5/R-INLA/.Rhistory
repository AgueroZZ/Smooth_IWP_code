ggsave(paste0(figure_path, "canada_covid_death_deriv_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
f1st_can_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "canada_covid_death_deriv_log_RINLA.pdf"), device = "pdf", width = 5, height = 5)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################     2. Denmark Analysis:   #############################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_DK <- full_data_covid %>% filter(location == "Denmark") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_DK, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_DK <- cbind(full_data_DK, Xf)
final_data_DK$index <- 1:nrow(final_data_DK)
### Fitting model
set.seed(123) ## seed
OS2mod_DK <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_DK, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_DK, selection = list(t = 1:(2*nrow(final_data_DK))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_DK_sum <- OS2mod_DK$summary.random$t %>% filter(ID >= 0)
f_DK_sum$Date = as.Date((f_DK_sum$ID - min(f_DK_sum$ID))*31, origin = min(full_data_DK$Date))
colnames(f_DK_sum)[c(4,6)] <- c("plower", "pupper")
f_DK <- samps_list[[1]]$latent[1:nrow(final_data_DK)]
for (i in 2:3000) {
f_DK <- cbind(f_DK, samps_list[[i]]$latent[1:nrow(final_data_DK)])
}
f_DK <- data.frame(Date = f_DK_sum$Date, data.frame(f_DK))
f1st_DK <- samps_list[[1]]$latent[(nrow(final_data_DK) + 1):(2*nrow(final_data_DK))]
for (i in 2:3000) {
f1st_DK <- cbind(f1st_DK, samps_list[[i]]$latent[(nrow(final_data_DK) + 1):(2*nrow(final_data_DK))])
}
f1st_DK <- data.frame(Date = f_DK_sum$Date, data.frame(f1st_DK))
f1st_DK_sum <- extract_mean_interval_given_samps(f1st_DK)
colnames(f1st_DK_sum)[1] <- "Date"
g1st_DK_sum <- extract_mean_interval_given_samps(cbind(f_DK_sum$Date, (exp(f_DK[,-1]) * f1st_DK[,-1])/31))
colnames(g1st_DK_sum)[1] <- "Date"
### Plotting:
DK_POP <- 5.831 ## millions
full_data_DK %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/DK_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/DK_POP), data = f_DK_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/DK_POP, ymin = exp(plower)/DK_POP), fill = "orange", alpha = 0.3, data = f_DK_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "DK_covid_death_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
g1st_DK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/DK_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/DK_POP, ymin = plower/DK_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "DK_covid_death_deriv_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
f1st_DK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "DK_covid_death_deriv_log_RINLA.pdf"), device = "pdf", width = 5, height = 5)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################   3. South Africa Analysis:   ##########################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_SA <- full_data_covid %>% filter(location == "South Africa") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_SA, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_SA <- cbind(full_data_SA, Xf)
final_data_SA$index <- 1:nrow(final_data_SA)
### Fitting model
set.seed(123) ## seed
OS2mod_SA <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_SA, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_SA, selection = list(t = 1:(2*nrow(final_data_SA))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_SA_sum <- OS2mod_SA$summary.random$t %>% filter(ID >= 0)
f_SA_sum$Date = as.Date((f_SA_sum$ID - min(f_SA_sum$ID))*31, origin = min(full_data_SA$Date))
colnames(f_SA_sum)[c(4,6)] <- c("plower", "pupper")
f_SA <- samps_list[[1]]$latent[1:nrow(final_data_SA)]
for (i in 2:3000) {
f_SA <- cbind(f_SA, samps_list[[i]]$latent[1:nrow(final_data_SA)])
}
f_SA <- data.frame(Date = f_SA_sum$Date, data.frame(f_SA))
f1st_SA <- samps_list[[1]]$latent[(nrow(final_data_SA) + 1):(2*nrow(final_data_SA))]
for (i in 2:3000) {
f1st_SA <- cbind(f1st_SA, samps_list[[i]]$latent[(nrow(final_data_SA) + 1):(2*nrow(final_data_SA))])
}
f1st_SA <- data.frame(Date = f_SA_sum$Date, data.frame(f1st_SA))
f1st_SA_sum <- extract_mean_interval_given_samps(f1st_SA)
colnames(f1st_SA_sum)[1] <- "Date"
g1st_SA_sum <- extract_mean_interval_given_samps(cbind(f_SA_sum$Date, (exp(f_SA[,-1]) * f1st_SA[,-1])/31))
colnames(g1st_SA_sum)[1] <- "Date"
### Plotting:
SA_POP <- 59.31 ## millions
full_data_SA %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/SA_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/SA_POP), data = f_SA_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/SA_POP, ymin = exp(plower)/SA_POP), fill = "orange", alpha = 0.3, data = f_SA_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SA_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
g1st_SA_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/SA_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/SA_POP, ymin = plower/SA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SA_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
f1st_SA_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SA_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################   4. South Korea Analysis:   ###########################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_SK <- full_data_covid %>% filter(location == "South Korea") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_SK, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_SK <- cbind(full_data_SK, Xf)
final_data_SK$index <- 1:nrow(final_data_SK)
### Fitting model
set.seed(123) ## seed
OS2mod_SK <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_SK, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_SK, selection = list(t = 1:(2*nrow(final_data_SK))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_SK_sum <- OS2mod_SK$summary.random$t %>% filter(ID >= 0)
f_SK_sum$Date = as.Date((f_SK_sum$ID - min(f_SK_sum$ID))*31, origin = min(full_data_SK$Date))
colnames(f_SK_sum)[c(4,6)] <- c("plower", "pupper")
f_SK <- samps_list[[1]]$latent[1:nrow(final_data_SK)]
for (i in 2:3000) {
f_SK <- cbind(f_SK, samps_list[[i]]$latent[1:nrow(final_data_SK)])
}
f_SK <- data.frame(Date = f_SK_sum$Date, data.frame(f_SK))
f1st_SK <- samps_list[[1]]$latent[(nrow(final_data_SK) + 1):(2*nrow(final_data_SK))]
for (i in 2:3000) {
f1st_SK <- cbind(f1st_SK, samps_list[[i]]$latent[(nrow(final_data_SK) + 1):(2*nrow(final_data_SK))])
}
f1st_SK <- data.frame(Date = f_SK_sum$Date, data.frame(f1st_SK))
f1st_SK_sum <- extract_mean_interval_given_samps(f1st_SK)
colnames(f1st_SK_sum)[1] <- "Date"
g1st_SK_sum <- extract_mean_interval_given_samps(cbind(f_SK_sum$Date, (exp(f_SK[,-1]) * f1st_SK[,-1])/31))
colnames(g1st_SK_sum)[1] <- "Date"
### Plotting:
SK_POP <- 51.78 ## millions
full_data_SK %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/SK_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/SK_POP), data = f_SK_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/SK_POP, ymin = exp(plower)/SK_POP), fill = "orange", alpha = 0.3, data = f_SK_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SK_covid_death_adjusted.pdf"), device = "pdf", width = 5, height = 5)
g1st_SK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/SK_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/SK_POP, ymin = plower/SK_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SK_covid_death_deriv_adjusted.pdf"), device = "pdf", width = 5, height = 5)
f1st_SK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SK_covid_death_deriv_log.pdf"), device = "pdf", width = 5, height = 5)
working_path <- paste0(getwd(),"/")
figure_path <- paste0(working_path,"figures/")
source_path <- paste0(working_path,"source/")
library(OSplines)
library(tidyverse)
library(aghq)
library(INLA)
library(TMB)
full_data_covid <- read.csv(file = paste0(working_path, "owid-covid-data.csv"), header = T)
full_data_covid <- full_data_covid %>% filter(date >= "2020-03-01")
full_data_covid$new_deaths[is.na(full_data_covid$new_deaths)] <- 0
full_data_covid$new_deaths <- round(full_data_covid$new_deaths)
full_data_covid$Date <- as.Date(full_data_covid$date)
full_data_covid$t <- (as.Date(full_data_covid$date) %>% as.numeric())/31
full_data_covid$weekdays <- weekdays(as.Date(full_data_covid$date))
full_data_covid$weekdays <- factor(full_data_covid$weekdays,
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered = F)
prior_set_conversion <- prior_conversion(d = (7/31), prior = list(u = log(2), alpha = 0.5), p = 2)
prior_set_overdis <- list(u1 = prior_set_conversion$u,
alpha1 = prior_set_conversion$a,
u2 = 0.1,
alpha2 = 0.5,
betaprec = 0.01,
Xfprec = 0.01)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################     1. Canada Analysis:   ##############################################################################
##################################################a############################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_canada <- full_data_covid %>% filter(location == "Canada") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_canada, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_canada <- cbind(full_data_canada, Xf)
final_data_canada$index <- 1:nrow(final_data_canada)
### Fitting model
set.seed(123) ## seed
OS2mod_Canada <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_canada, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_Canada, selection = list(t = 1:(2*nrow(final_data_canada))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_can_sum <- OS2mod_Canada$summary.random$t %>% filter(ID >= 0)
f_can_sum$Date = as.Date((f_can_sum$ID - min(f_can_sum$ID))*31, origin = min(full_data_canada$Date))
colnames(f_can_sum)[c(4,6)] <- c("plower", "pupper")
f_can <- samps_list[[1]]$latent[1:nrow(final_data_canada)]
for (i in 2:3000) {
f_can <- cbind(f_can, samps_list[[i]]$latent[1:nrow(final_data_canada)])
}
f_can <- data.frame(Date = f_can_sum$Date, data.frame(f_can))
f1st_can <- samps_list[[1]]$latent[(nrow(final_data_canada) + 1):(2*nrow(final_data_canada))]
for (i in 2:3000) {
f1st_can <- cbind(f1st_can, samps_list[[i]]$latent[(nrow(final_data_canada) + 1):(2*nrow(final_data_canada))])
}
f1st_can <- data.frame(Date = f_can_sum$Date, data.frame(f1st_can))
f1st_can_sum <- extract_mean_interval_given_samps(f1st_can)
colnames(f1st_can_sum)[1] <- "Date"
g1st_can_sum <- extract_mean_interval_given_samps(cbind(f_can_sum$Date, (exp(f_can[,-1]) * f1st_can[,-1])/31))
colnames(g1st_can_sum)[1] <- "Date"
### Plotting:
CANADA_POP <- 38.01 ## millions
full_data_canada %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/CANADA_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/CANADA_POP), data = f_can_sum_check, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/CANADA_POP, ymin = exp(plower)/CANADA_POP), fill = "orange", alpha = 0.3, data = f_can_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
### Plotting:
CANADA_POP <- 38.01 ## millions
full_data_canada %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/CANADA_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/CANADA_POP), data = f_can_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/CANADA_POP, ymin = exp(plower)/CANADA_POP), fill = "orange", alpha = 0.3, data = f_can_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "canada_covid_death_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
g1st_can_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/CANADA_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/CANADA_POP, ymin = plower/CANADA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "canada_covid_death_deriv_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
f1st_can_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "canada_covid_death_deriv_log_RINLA.pdf"), device = "pdf", width = 5, height = 5)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################     2. Denmark Analysis:   #############################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_DK <- full_data_covid %>% filter(location == "Denmark") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_DK, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_DK <- cbind(full_data_DK, Xf)
final_data_DK$index <- 1:nrow(final_data_DK)
### Fitting model
set.seed(123) ## seed
OS2mod_DK <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_DK, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_DK, selection = list(t = 1:(2*nrow(final_data_DK))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_DK_sum <- OS2mod_DK$summary.random$t %>% filter(ID >= 0)
f_DK_sum$Date = as.Date((f_DK_sum$ID - min(f_DK_sum$ID))*31, origin = min(full_data_DK$Date))
colnames(f_DK_sum)[c(4,6)] <- c("plower", "pupper")
f_DK <- samps_list[[1]]$latent[1:nrow(final_data_DK)]
for (i in 2:3000) {
f_DK <- cbind(f_DK, samps_list[[i]]$latent[1:nrow(final_data_DK)])
}
f_DK <- data.frame(Date = f_DK_sum$Date, data.frame(f_DK))
f1st_DK <- samps_list[[1]]$latent[(nrow(final_data_DK) + 1):(2*nrow(final_data_DK))]
for (i in 2:3000) {
f1st_DK <- cbind(f1st_DK, samps_list[[i]]$latent[(nrow(final_data_DK) + 1):(2*nrow(final_data_DK))])
}
f1st_DK <- data.frame(Date = f_DK_sum$Date, data.frame(f1st_DK))
f1st_DK_sum <- extract_mean_interval_given_samps(f1st_DK)
colnames(f1st_DK_sum)[1] <- "Date"
g1st_DK_sum <- extract_mean_interval_given_samps(cbind(f_DK_sum$Date, (exp(f_DK[,-1]) * f1st_DK[,-1])/31))
colnames(g1st_DK_sum)[1] <- "Date"
### Plotting:
DK_POP <- 5.831 ## millions
full_data_DK %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/DK_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/DK_POP), data = f_DK_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/DK_POP, ymin = exp(plower)/DK_POP), fill = "orange", alpha = 0.3, data = f_DK_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "DK_covid_death_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
g1st_DK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/DK_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/DK_POP, ymin = plower/DK_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "DK_covid_death_deriv_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
f1st_DK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "DK_covid_death_deriv_log_RINLA.pdf"), device = "pdf", width = 5, height = 5)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################   3. South Africa Analysis:   ##########################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_SA <- full_data_covid %>% filter(location == "South Africa") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_SA, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_SA <- cbind(full_data_SA, Xf)
final_data_SA$index <- 1:nrow(final_data_SA)
### Fitting model
set.seed(123) ## seed
OS2mod_SA <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_SA, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_SA, selection = list(t = 1:(2*nrow(final_data_SA))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_SA_sum <- OS2mod_SA$summary.random$t %>% filter(ID >= 0)
f_SA_sum$Date = as.Date((f_SA_sum$ID - min(f_SA_sum$ID))*31, origin = min(full_data_SA$Date))
colnames(f_SA_sum)[c(4,6)] <- c("plower", "pupper")
f_SA <- samps_list[[1]]$latent[1:nrow(final_data_SA)]
for (i in 2:3000) {
f_SA <- cbind(f_SA, samps_list[[i]]$latent[1:nrow(final_data_SA)])
}
f_SA <- data.frame(Date = f_SA_sum$Date, data.frame(f_SA))
f1st_SA <- samps_list[[1]]$latent[(nrow(final_data_SA) + 1):(2*nrow(final_data_SA))]
for (i in 2:3000) {
f1st_SA <- cbind(f1st_SA, samps_list[[i]]$latent[(nrow(final_data_SA) + 1):(2*nrow(final_data_SA))])
}
f1st_SA <- data.frame(Date = f_SA_sum$Date, data.frame(f1st_SA))
f1st_SA_sum <- extract_mean_interval_given_samps(f1st_SA)
colnames(f1st_SA_sum)[1] <- "Date"
g1st_SA_sum <- extract_mean_interval_given_samps(cbind(f_SA_sum$Date, (exp(f_SA[,-1]) * f1st_SA[,-1])/31))
colnames(g1st_SA_sum)[1] <- "Date"
### Plotting:
SA_POP <- 59.31 ## millions
full_data_SA %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/SA_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/SA_POP), data = f_SA_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/SA_POP, ymin = exp(plower)/SA_POP), fill = "orange", alpha = 0.3, data = f_SA_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SA_covid_death_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
g1st_SA_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/SA_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/SA_POP, ymin = plower/SA_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SA_covid_death_deriv_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
f1st_SA_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SA_covid_death_deriv_log_RINLA.pdf"), device = "pdf", width = 5, height = 5)
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
######################################################################   4. South Korea Analysis:   ###########################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
###############################################################################################################################################################################
### Processing data:
full_data_SK <- full_data_covid %>% filter(location == "South Korea") %>% dplyr::select(Date, date, new_deaths, t, weekdays)
Xf <- model.matrix(~ weekdays, data = full_data_SK, contrasts.arg = list(weekdays = "contr.sum"))[,-1]
final_data_SK <- cbind(full_data_SK, Xf)
final_data_SK$index <- 1:nrow(final_data_SK)
### Fitting model
set.seed(123) ## seed
OS2mod_SK <- inla(formula = new_deaths~-1 + weekdays1 + weekdays2 + weekdays3 + weekdays4 + weekdays5 + weekdays6 +
f(t, model = "crw2", constr = F, hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u1, prior_set_overdis$alpha1)))) +
f(index, model = "iid", hyper = list(prec = list(prior = "pc.prec", param = c(prior_set_overdis$u2, prior_set_overdis$alpha2)))),
data = final_data_SK, family = "Poisson",
control.fixed = list(prec = prior_set_overdis$Xfprec), control.compute=list(config = TRUE))
samps_list <- inla.posterior.sample(n = 3000, result = OS2mod_SK, selection = list(t = 1:(2*nrow(final_data_SK))),
intern = FALSE, use.improved.mean = TRUE,
add.names = TRUE, seed = 0L, num.threads = NULL,
verbose = FALSE)
f_SK_sum <- OS2mod_SK$summary.random$t %>% filter(ID >= 0)
f_SK_sum$Date = as.Date((f_SK_sum$ID - min(f_SK_sum$ID))*31, origin = min(full_data_SK$Date))
colnames(f_SK_sum)[c(4,6)] <- c("plower", "pupper")
f_SK <- samps_list[[1]]$latent[1:nrow(final_data_SK)]
for (i in 2:3000) {
f_SK <- cbind(f_SK, samps_list[[i]]$latent[1:nrow(final_data_SK)])
}
f_SK <- data.frame(Date = f_SK_sum$Date, data.frame(f_SK))
f1st_SK <- samps_list[[1]]$latent[(nrow(final_data_SK) + 1):(2*nrow(final_data_SK))]
for (i in 2:3000) {
f1st_SK <- cbind(f1st_SK, samps_list[[i]]$latent[(nrow(final_data_SK) + 1):(2*nrow(final_data_SK))])
}
f1st_SK <- data.frame(Date = f_SK_sum$Date, data.frame(f1st_SK))
f1st_SK_sum <- extract_mean_interval_given_samps(f1st_SK)
colnames(f1st_SK_sum)[1] <- "Date"
g1st_SK_sum <- extract_mean_interval_given_samps(cbind(f_SK_sum$Date, (exp(f_SK[,-1]) * f1st_SK[,-1])/31))
colnames(g1st_SK_sum)[1] <- "Date"
### Plotting:
SK_POP <- 51.78 ## millions
full_data_SK %>% ggplot(aes(x = Date)) + geom_point(aes(y = new_deaths/SK_POP), alpha = 0.3, size = 0.5) +
geom_line(aes(y = exp(mean)/SK_POP), data = f_SK_sum, color = "blue") +
geom_ribbon(aes(ymax = exp(pupper)/SK_POP, ymin = exp(plower)/SK_POP), fill = "orange", alpha = 0.3, data = f_SK_sum) +
theme_classic(base_size = 15) + ylab("New Deaths (per million)") + xlab("") + guides(color= "none") +
scale_x_date(date_labels = "%y %b") + coord_cartesian(ylim = c(0,9))
ggsave(paste0(figure_path, "SK_covid_death_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
g1st_SK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean/SK_POP, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper/SK_POP, ymin = plower/SK_POP), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("Change in daily death (per million)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b")  + coord_cartesian(ylim = c(-0.3,0.3))
ggsave(paste0(figure_path, "SK_covid_death_deriv_adjusted_RINLA.pdf"), device = "pdf", width = 5, height = 5)
f1st_SK_sum %>% ggplot(aes(x = Date)) +
geom_line(aes(y = mean, color = "OS3"), size = 1) +
geom_ribbon(aes(ymax = pupper, ymin = plower), fill = "orange", alpha = 0.3) +
theme_classic(base_size = 15) +
ylab("g'(t)") + xlab("") +
scale_color_manual(values = c("blue")) +
guides(color= "none") +
scale_x_date(date_labels = "%y %b") +
coord_cartesian(ylim = c(-3,5))
ggsave(paste0(figure_path, "SK_covid_death_deriv_log_RINLA.pdf"), device = "pdf", width = 5, height = 5)
